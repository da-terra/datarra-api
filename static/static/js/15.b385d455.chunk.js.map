{"version":3,"sources":["components/util/RelativeDate/RelativeDate.tsx","components/util/RelativeDate/index.ts","components/general/TagWrapper/styled.ts","components/general/TagWrapper/TagWrapper.tsx","components/general/TagWrapper/index.ts","util/createPath.ts","data/Tag.ts","util/getMatchingBitmasks.ts","components/general/ArticleCard/styled.ts","components/general/ArticleCard/ArticleCard.tsx","components/blocks/ArticlesList/styled.ts","components/blocks/ArticlesList/ArticlesList.tsx","components/blocks/ArticlesList/index.ts"],"names":["formateDistanceToNowOptions","addSuffix","includeSeconds","locale","nl","RelativeDate","children","timeDistance","formatDistanceToNow","fromUnixTime","parseInt","Background","styled","div","HeadingWrapper","Breakpoints","H750","Description","Paragraph","Content","H500","Tag","H1500","TagWrapper","tag","heading","description","className","Wrapper","width","WrapperWidth","Small","fontColor","FontColor","Tertiary","fontWeight","FontWeight","Black","createPath","route","parameters","replace","parameterKey","substr","Tags","Announcement","CaseStudy","TagNames","getTagNames","tagBit","bit","bitMasks","Object","values","reduce","accumulator","currentBit","push","map","CardImageWrapper","CardImage","img","CardContent","props","color","theme","copy","primaryInverted","Details","PublishedDate","Title","Heading","Author","Card","Button","Easings","easeOutCubic","easeOutExpo","ArticleCard","slug","image","publishedDate","tags","title","author","firstTag","href","RoutePath","ArticleDetail","fallbackColor","as","fontSize","FontSize","serif","headingType","HeadingType","Secondary","fullName","ArticlesWrapper","List","H1250","marginSize","CtaLink","LinkButton","ArticlesList","body","articles","link","article","key"],"mappings":"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","file":"static/js/15.b385d455.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { formatDistanceToNow, fromUnixTime } from \"date-fns\";\r\nimport { nl } from \"date-fns/locale\";\r\n\r\n// @ts-ignore\r\nconst formateDistanceToNowOptions = {\r\n  addSuffix: true,\r\n  includeSeconds: true,\r\n  locale: nl\r\n};\r\n\r\ntype RelativeDateProps = {\r\n  children: string;\r\n};\r\n\r\nconst RelativeDate: React.FC<RelativeDateProps> = ({ children }) => {\r\n  const timeDistance = formatDistanceToNow(\r\n    fromUnixTime(parseInt(children, 10) / 1000),\r\n    formateDistanceToNowOptions\r\n  );\r\n\r\n  return <Fragment>{timeDistance}</Fragment>;\r\n};\r\n\r\nexport default RelativeDate;\r\n","export { default } from \"./RelativeDate\";\r\n","import styled from \"styled-components\";\r\nimport { Breakpoints } from \"../../../data/style/variables\";\r\nimport Paragraph from \"../Paragraph\";\r\nexport { default as Wrapper } from \"../Wrapper\";\r\n\r\nexport const Background = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const HeadingWrapper = styled.div`\r\n  padding-top: 10.2rem;\r\n  padding-bottom: 2.4rem;\r\n\r\n  @media (max-width: ${Breakpoints.H750}) {\r\n    padding-top: 6.4rem;\r\n  }\r\n`;\r\n\r\nexport const Description = styled(Paragraph)`\r\n  margin-bottom: 4.2rem;\r\n  max-width: 75%;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  padding-bottom: 10.2rem;\r\n\r\n  @media (max-width: ${Breakpoints.H500}) {\r\n    padding-bottom: 4.6rem;\r\n  }\r\n`;\r\n\r\nexport const Tag = styled(Paragraph)`\r\n  position: absolute;\r\n  text-transform: uppercase;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translate(calc(-100% - 5.2rem), 0);\r\n\r\n  @media (max-width: ${Breakpoints.H1500}) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { WrapperWidth } from \"../Wrapper\";\r\nimport { FontColor, FontWeight } from \"../../../data/style/variables\";\r\nimport {\r\n  Background,\r\n  Wrapper,\r\n  HeadingWrapper,\r\n  Description,\r\n  Content,\r\n  Tag\r\n} from \"./styled\";\r\n\r\ntype TagWrapperProps = {\r\n  tag: React.ReactNode;\r\n  heading?: React.ReactNode;\r\n  description?: React.ReactNode;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nconst TagWrapper: React.FC<TagWrapperProps> = ({\r\n  children,\r\n  tag,\r\n  heading,\r\n  description,\r\n  className\r\n}) => (\r\n  <Background className={className}>\r\n    <Wrapper width={WrapperWidth.Small}>\r\n      {heading && <HeadingWrapper>{heading}</HeadingWrapper>}\r\n      {description && <Description>{description}</Description>}\r\n\r\n      <Content>\r\n        <Tag fontColor={FontColor.Tertiary} fontWeight={FontWeight.Black}>\r\n          {tag}\r\n        </Tag>\r\n\r\n        {children}\r\n      </Content>\r\n    </Wrapper>\r\n  </Background>\r\n);\r\n\r\nexport default TagWrapper;\r\n","export { default } from \"./TagWrapper\";\r\n","import RoutePath from \"../data/RoutePath\";\r\n\r\nconst createPath = (route: RoutePath, parameters: { [name: string]: string }) =>\r\n  route.replace(\r\n    /:[a-z]+/gi,\r\n    parameterKey => parameters[parameterKey.substr(1)]\r\n  );\r\n\r\nexport default createPath;\r\n","import getMatchingBitmasks from \"../util/getMatchingBitmasks\";\r\n\r\nexport const Tags = {\r\n  Announcement: 1 << 0,\r\n  CaseStudy: 1 << 1\r\n};\r\n\r\nexport const TagNames = {\r\n  [Tags.Announcement]: \"Aankondiging\",\r\n  [Tags.CaseStudy]: \"Case Study\"\r\n};\r\n\r\nexport const getTagNames = (tagBit: number): string[] =>\r\n  getMatchingBitmasks(tagBit, Tags).map(bit => TagNames[bit]);\r\n","/**\r\n * Finds values in bitmasks that match the given bit\r\n */\r\nexport default (bit: number, bitMasks: { [name: number]: number }): number[] =>\r\n  Object.values(bitMasks).reduce(\r\n    (accumulator, currentBit) => {\r\n      if ((bit & currentBit) === currentBit) {\r\n        accumulator.push(currentBit);\r\n      }\r\n\r\n      return accumulator;\r\n    },\r\n    [] as number[]\r\n  );\r\n","import styled from \"styled-components\";\r\nimport Paragraph from \"../Paragraph\";\r\nimport Heading from \"../Heading\";\r\nimport Easings from \"../../../data/style/easings\";\r\nimport Button from \"../Button\";\r\n\r\nexport { default as Paragraph } from \"../Paragraph\";\r\n\r\ntype CardContentProps = {\r\n  color: string;\r\n};\r\n\r\nconst paddingSize = `1.5rem`;\r\n\r\nexport const CardImageWrapper = styled.div`\r\n  position: relative;\r\n  min-width: 100%;\r\n  height: 25rem;\r\n  overflow-hidden;\r\n`;\r\n\r\nexport const CardImage = styled.img`\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const CardContent = styled.div<CardContentProps>`\r\n  position: relative;\r\n  padding: ${paddingSize};\r\n  background: ${props => props.color};\r\n  color: ${props => props.theme.copy.primaryInverted};\r\n  box-shadow: 0 0 3.5rem 4rem ${props => props.color};\r\n  flex: 1 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${paddingSize};\r\n  right: ${paddingSize};\r\n  transform: translateY(-100%);\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PublishedDate = styled(Paragraph)`\r\n  margin-right: auto;\r\n  letter-spacing: 0.08rem;\r\n\r\n  &:first-letter {\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nexport const Tag = Paragraph;\r\n\r\nexport const Title = styled(Heading)`\r\n  margin-bottom: 2rem;\r\n  max-width: 80%;\r\n`;\r\n\r\nexport const Author = styled.div`\r\n  margin-top: auto;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Card = styled(Button)`\r\n  overflow: hidden;\r\n  border-radius: 1rem;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${Author},\r\n  ${Details} {\r\n    transition: all 0.6s ${Easings.easeOutCubic};\r\n  }\r\n\r\n  &:not(:hover) {\r\n    ${Author},\r\n    ${Details} {\r\n      transition-duration: 1.8s;\r\n      transition-timing-function: ${Easings.easeOutExpo};\r\n      opacity: 0.4;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { HeadingType } from \"../Heading\";\r\nimport { FontSize } from \"../../../data/style/variables\";\r\nimport { getTagNames } from \"../../../data/Tag\";\r\nimport RoutePath from \"../../../data/RoutePath\";\r\nimport RelativeDate from \"../../util/RelativeDate\";\r\nimport createPath from \"../../../util/createPath\";\r\nimport {\r\n  Card,\r\n  CardImageWrapper,\r\n  CardImage,\r\n  CardContent,\r\n  Details,\r\n  PublishedDate,\r\n  Tag,\r\n  Title,\r\n  Author,\r\n  Paragraph\r\n} from \"./styled\";\r\n\r\ntype ArticleCardProps = IArticle & {\r\n  className?: string;\r\n};\r\n\r\nconst ArticleCard: React.FC<ArticleCardProps> = ({\r\n  className,\r\n  slug,\r\n  image,\r\n  publishedDate,\r\n  tags,\r\n  title,\r\n  author\r\n}) => {\r\n  const [firstTag] = getTagNames(tags);\r\n\r\n  return (\r\n    <Card\r\n      className={className}\r\n      href={createPath(RoutePath.ArticleDetail, { slug })}\r\n    >\r\n      <CardImageWrapper>\r\n        <CardImage {...image} />\r\n      </CardImageWrapper>\r\n\r\n      <CardContent color={image.fallbackColor}>\r\n        <Details>\r\n          <PublishedDate as=\"time\" fontSize={FontSize.Small}>\r\n            <RelativeDate>{publishedDate}</RelativeDate>\r\n          </PublishedDate>\r\n\r\n          <Tag serif fontSize={FontSize.Small}>\r\n            {firstTag}\r\n          </Tag>\r\n        </Details>\r\n\r\n        <Title headingType={HeadingType.Secondary} serif>\r\n          {title}\r\n        </Title>\r\n\r\n        <Author>\r\n          <Paragraph fontSize={FontSize.Small}>Geschreven door:</Paragraph>\r\n          <Paragraph fontSize={FontSize.Small} serif>\r\n            {author.fullName}\r\n          </Paragraph>\r\n        </Author>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\nexport default ArticleCard;\r\n","import styled from \"styled-components\";\r\nimport { LinkButton } from \"../../general/Button\";\r\nimport { default as ArticleCard } from \"../../general/ArticleCard\";\r\nimport { Breakpoints } from \"../../../data/style/variables\";\r\nexport { default as TagWrapper } from \"../../general/TagWrapper\";\r\nexport { default as Heading } from \"../../general/Heading\";\r\n\r\nconst marginSize = 2;\r\n\r\nexport const ArticlesWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: -${marginSize}rem;\r\n\r\n  @media (max-width: ${Breakpoints.H1250}) {\r\n    justify-content: flex-start;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nexport const Card = styled(ArticleCard)`\r\n  margin: ${marginSize}rem;\r\n  width: 40rem;\r\n\r\n  @media (max-width: ${Breakpoints.H1250}) {\r\n    max-width: none;\r\n    width: calc(50% - ${marginSize * 2}rem);\r\n  }\r\n\r\n  @media (max-width: ${Breakpoints.H750}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const CtaLink = styled(LinkButton)`\r\n  margin-left: auto;\r\n  margin-top: 6.4rem;\r\n  text-decoration: underline;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n\r\n  @media (max-width: ${Breakpoints.H750}) {\r\n    margin-top: 2.4rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { HeadingType } from \"../../general/Heading\";\r\nimport { FontWeight } from \"../../../data/style/variables\";\r\nimport {\r\n  TagWrapper,\r\n  Heading,\r\n  ArticlesWrapper,\r\n  List,\r\n  Card,\r\n  CtaLink\r\n} from \"./styled\";\r\n\r\ntype FeaturedArticlesProps = {\r\n  title?: string;\r\n  body?: string;\r\n  tag: React.ReactNode;\r\n  articles: IArticle[];\r\n  link?: ILink;\r\n  className?: string;\r\n};\r\n\r\nconst ArticlesList: React.FC<FeaturedArticlesProps> = ({\r\n  title,\r\n  body,\r\n  tag,\r\n  articles,\r\n  link,\r\n  className\r\n}) => {\r\n  const heading = title && (\r\n    <Heading headingType={HeadingType.Secondary} fontWeight={FontWeight.Black}>\r\n      {title}\r\n    </Heading>\r\n  );\r\n\r\n  return (\r\n    <TagWrapper\r\n      className={className}\r\n      heading={heading}\r\n      description={body}\r\n      tag={tag}\r\n    >\r\n      <ArticlesWrapper>\r\n        <List>\r\n          {articles.map(article => (\r\n            <Card {...article} key={article.slug} />\r\n          ))}\r\n        </List>\r\n\r\n        {link && (\r\n          <CtaLink {...link} serif>\r\n            {link.children}\r\n          </CtaLink>\r\n        )}\r\n      </ArticlesWrapper>\r\n    </TagWrapper>\r\n  );\r\n};\r\n\r\nexport default ArticlesList;\r\n","export { default } from \"./ArticlesList\";\r\n"],"sourceRoot":""}