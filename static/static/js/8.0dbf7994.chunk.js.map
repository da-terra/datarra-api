{"version":3,"sources":["components/util/RelativeDate/RelativeDate.tsx","components/util/RelativeDate/index.ts","components/blocks/ArticleHeading/styled.ts","components/blocks/ArticleHeading/ArticleHeading.tsx","components/blocks/ArticleHeading/index.ts","util/createPath.ts","data/Tag.ts","util/getMatchingBitmasks.ts","components/general/RichTextEditor/elements/ParagraphNode/styled.ts","components/general/RichTextEditor/elements/ParagraphNode/ParagraphNode.tsx","components/general/RichTextEditor/elements/index.tsx","components/general/RichTextEditor/marks/index.tsx","components/general/RichTextEditor/RichTextEditor.tsx","components/general/RichTextEditor/index.ts","components/blocks/RichText/RichText.tsx","components/blocks/RichText/index.ts","components/blocks/ArticleHero/styled.ts","components/blocks/ArticleHero/ArticleHero.tsx","components/blocks/ArticleHero/index.ts","components/blocks/FeaturedArticleHero/styled.ts","components/blocks/FeaturedArticleHero/FeaturedArticleHero.tsx","components/blocks/FeaturedArticleHero/index.ts","components/App/blocks.tsx"],"names":["formateDistanceToNowOptions","addSuffix","includeSeconds","locale","nl","RelativeDate","children","timeDistance","formatDistanceToNow","fromUnixTime","parseInt","ArticleHeadingWrapper","styled","Wrapper","Title","Heading","ArticleProperties","aside","ArticleProperty","Paragraph","PublishedDate","AuthorLink","ArticleHeading","title","tags","publishedDate","author","fullName","className","email","width","WrapperWidth","Smaller","as","fontWeight","FontWeight","Black","fontSize","FontSize","Small","getTagNames","join","dateTime","Bold","createPath","route","parameters","replace","parameterKey","substr","Tags","Announcement","CaseStudy","TagNames","tagBit","bit","bitMasks","Object","values","reduce","accumulator","currentBit","push","map","StyledParagraph","ParagraphNode","attributes","elements","paragraph","fallbackElement","props","Component","element","type","console","log","Mark","mark","defaultValue","text","marks","RichTextEditor","value","readOnly","editor","onChange","useMemo","withReact","createEditor","withHistory","JSON","stringify","renderElement","renderMark","RichText","nodes","BackgroundWrapper","div","inverted","theme","copy","primaryInverted","primary","image","src","fallbackColor","Breakpoints","H750","ArticleHero","Logo","showName","ArticleHeadingButton","Button","FeaturedArticleHero","slug","href","RoutePath","ArticleDetail","Normal","alt"],"mappings":"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","file":"static/js/8.0dbf7994.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { formatDistanceToNow, fromUnixTime } from \"date-fns\";\r\nimport { nl } from \"date-fns/locale\";\r\n\r\n// @ts-ignore\r\nconst formateDistanceToNowOptions = {\r\n  addSuffix: true,\r\n  includeSeconds: true,\r\n  locale: nl\r\n};\r\n\r\ntype RelativeDateProps = {\r\n  children: string;\r\n};\r\n\r\nconst RelativeDate: React.FC<RelativeDateProps> = ({ children }) => {\r\n  const timeDistance = formatDistanceToNow(\r\n    fromUnixTime(parseInt(children, 10) / 1000),\r\n    formateDistanceToNowOptions\r\n  );\r\n\r\n  return <Fragment>{timeDistance}</Fragment>;\r\n};\r\n\r\nexport default RelativeDate;\r\n","export { default } from \"./RelativeDate\";\r\n","import styled from \"styled-components\";\r\nimport Heading from \"../../general/Heading\";\r\nimport Paragraph from \"../../general/Paragraph\";\r\nimport Wrapper from \"../../general/Wrapper\";\r\n\r\nexport { default as RelativeTime } from \"../../util/RelativeDate\";\r\n\r\nexport const ArticleHeadingWrapper = styled(Wrapper)`\r\n  padding-top: 7.5rem;\r\n  padding-bottom: 7.5rem;\r\n`;\r\n\r\nexport const Title = styled(Heading)`\r\n  white-space: pre-line;\r\n`;\r\n\r\nexport const ArticleProperties = styled.aside`\r\n  margin-top: 2rem;\r\n`;\r\n\r\nexport const ArticleProperty = styled(Paragraph)`\r\n  &:not(:first-child) {\r\n    margin-left: 8rem;\r\n  }\r\n`;\r\n\r\nexport const PublishedDate = styled(Paragraph)<{ dateTime: string }>`\r\n  &:after {\r\n    content: \"-\";\r\n    display: inline-block;\r\n    margin: 0 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const AuthorLink = Paragraph;\r\n","import React from \"react\";\r\nimport { FontWeight, FontSize } from \"../../../data/style/variables\";\r\nimport { getTagNames } from \"../../../data/Tag\";\r\nimport { WrapperWidth } from \"../../general/Wrapper\";\r\nimport {\r\n  ArticleHeadingWrapper,\r\n  Title,\r\n  RelativeTime,\r\n  ArticleProperties,\r\n  ArticleProperty,\r\n  PublishedDate,\r\n  AuthorLink\r\n} from \"./styled\";\r\n\r\ntype ArticleHeadingProps = {\r\n  title: React.ReactNode;\r\n  tags: number;\r\n  publishedDate: string;\r\n  author: IUser;\r\n\r\n  // Props used in FeaturedArticleHero\r\n  className?: string;\r\n  width?: WrapperWidth;\r\n};\r\n\r\nconst ArticleHeading: React.FC<ArticleHeadingProps> = ({\r\n  title,\r\n  tags,\r\n  publishedDate,\r\n  author: { fullName, email },\r\n  className,\r\n  width = WrapperWidth.Smaller\r\n}) => {\r\n  return (\r\n    <ArticleHeadingWrapper width={width} className={className}>\r\n      <Title>{title}</Title>\r\n\r\n      <ArticleProperties>\r\n        <ArticleProperty\r\n          as=\"span\"\r\n          fontWeight={FontWeight.Black}\r\n          fontSize={FontSize.Small}\r\n        >\r\n          {getTagNames(tags).join(\" - \")}\r\n        </ArticleProperty>\r\n\r\n        <ArticleProperty as=\"span\">\r\n          <PublishedDate\r\n            as=\"time\"\r\n            dateTime={publishedDate}\r\n            fontWeight={FontWeight.Bold}\r\n            fontSize={FontSize.Small}\r\n          >\r\n            <RelativeTime>{publishedDate}</RelativeTime>\r\n          </PublishedDate>\r\n\r\n          <AuthorLink\r\n            as=\"span\"\r\n            fontWeight={FontWeight.Bold}\r\n            fontSize={FontSize.Small}\r\n          >\r\n            {fullName}\r\n          </AuthorLink>\r\n        </ArticleProperty>\r\n      </ArticleProperties>\r\n    </ArticleHeadingWrapper>\r\n  );\r\n};\r\n\r\nexport default ArticleHeading;\r\n","export { default } from \"./ArticleHeading\";\r\n","import RoutePath from \"../data/RoutePath\";\r\n\r\nconst createPath = (route: RoutePath, parameters: { [name: string]: string }) =>\r\n  route.replace(\r\n    /:[a-z]+/gi,\r\n    parameterKey => parameters[parameterKey.substr(1)]\r\n  );\r\n\r\nexport default createPath;\r\n","import getMatchingBitmasks from \"../util/getMatchingBitmasks\";\r\n\r\nexport const Tags = {\r\n  Announcement: 1 << 0,\r\n  CaseStudy: 1 << 1\r\n};\r\n\r\nexport const TagNames = {\r\n  [Tags.Announcement]: \"Aankondiging\",\r\n  [Tags.CaseStudy]: \"Case Study\"\r\n};\r\n\r\nexport const getTagNames = (tagBit: number): string[] =>\r\n  getMatchingBitmasks(tagBit, Tags).map(bit => TagNames[bit]);\r\n","/**\r\n * Finds values in bitmasks that match the given bit\r\n */\r\nexport default (bit: number, bitMasks: { [name: number]: number }): number[] =>\r\n  Object.values(bitMasks).reduce(\r\n    (accumulator, currentBit) => {\r\n      if ((bit & currentBit) === currentBit) {\r\n        accumulator.push(currentBit);\r\n      }\r\n\r\n      return accumulator;\r\n    },\r\n    [] as number[]\r\n  );\r\n","import styled from \"styled-components\";\r\nimport Paragraph from \"../../../Paragraph\";\r\n\r\nexport const StyledParagraph = styled(Paragraph)`\r\n  margin-bottom: 2rem;\r\n\r\n  &:last-child {\r\n    margin-bottom: 10rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { RenderElementProps } from \"slate-react\";\r\nimport { StyledParagraph } from \"./styled\";\r\n\r\nconst ParagraphNode: React.FC<RenderElementProps> = ({\r\n  children,\r\n  attributes\r\n}) => <StyledParagraph {...attributes}>{children}</StyledParagraph>;\r\n\r\nexport default ParagraphNode;\r\n","import React from \"react\";\r\nimport { RenderElementProps } from \"slate-react\";\r\n\r\n//\r\nimport ParagraphNode from \"./ParagraphNode\";\r\n\r\n// List of all elements with a reference to their element type name\r\nconst elements: any = {\r\n  paragraph: ParagraphNode\r\n};\r\n\r\nconst fallbackElement = ParagraphNode;\r\n\r\nexport default (props: RenderElementProps): JSX.Element => {\r\n  const Component = elements[props.element.type] || fallbackElement;\r\n\r\n  console.log(props);\r\n\r\n  return <Component {...props} />;\r\n};\r\n","import React from \"react\";\r\nimport { RenderMarkProps } from \"slate-react\";\r\n\r\ntype MarkFunc = ((props: RenderMarkProps) => JSX.Element) | undefined;\r\n\r\nconst Mark: MarkFunc = ({\r\n  attributes,\r\n  children,\r\n  mark\r\n}) => {\r\n  switch (mark.type) {\r\n    case \"bold\":\r\n      return <strong {...attributes}>{children}</strong>;\r\n    case \"code\":\r\n      return <code {...attributes}>{children}</code>;\r\n    case \"italic\":\r\n      return <em {...attributes}>{children}</em>;\r\n    case \"underlined\":\r\n      return <u {...attributes}>{children}</u>;\r\n  }\r\n\r\n  return <span {...attributes}>{children}</span>;\r\n};\r\n\r\nexport default Mark;\r\n","import React, { useMemo } from \"react\";\r\nimport { createEditor, Node, Operation } from \"slate\";\r\nimport { withHistory } from \"slate-history\";\r\nimport { Slate, Editable, withReact } from \"slate-react\";\r\nimport renderElement from \"./elements\";\r\nimport renderMark from \"./marks\";\r\n\r\nconst defaultValue: Node[] = [\r\n  {\r\n    type: \"paragraph\",\r\n    children: [\r\n      {\r\n        text: \"This is editable \",\r\n        marks: []\r\n      },\r\n      {\r\n        text: \"rich\",\r\n        marks: [{ type: \"bold\" }]\r\n      },\r\n      {\r\n        text: \" text, \",\r\n        marks: []\r\n      },\r\n      {\r\n        text: \"much\",\r\n        marks: [{ type: \"italic\" }]\r\n      },\r\n      {\r\n        text: \" better than a \",\r\n        marks: []\r\n      },\r\n      {\r\n        text: \"<textarea>\",\r\n        marks: [{ type: \"code\" }]\r\n      },\r\n      {\r\n        text: \"!\",\r\n        marks: []\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"paragraph\",\r\n    children: [\r\n      {\r\n        text:\r\n          \"Since it's rich text, you can do things like turn a selection of text \",\r\n        marks: []\r\n      },\r\n      {\r\n        text: \"bold\",\r\n        marks: [{ type: \"bold\" }]\r\n      },\r\n      {\r\n        text:\r\n          \", or add a semantically rendered block quote in the middle of the page, like this:\",\r\n        marks: []\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"block-quote\",\r\n    children: [\r\n      {\r\n        text: \"A wise quote.\",\r\n        marks: []\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    type: \"paragraph\",\r\n    children: [\r\n      {\r\n        text: \"Try it out for yourself!\",\r\n        marks: []\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\ntype RichTextEditorProps = {\r\n  value?: Node[];\r\n  readOnly?: boolean;\r\n  onChange?: ((children: Node[], operations: Operation[]) => void) | undefined;\r\n};\r\n\r\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({\r\n  value,\r\n  readOnly,\r\n  onChange\r\n}) => {\r\n  const editor = useMemo(() => {\r\n    if (readOnly) {\r\n      return withReact(createEditor());\r\n    }\r\n\r\n    return withHistory(withReact(createEditor()));\r\n  }, [readOnly]);\r\n\r\n  return (\r\n    <Slate\r\n      editor={editor}\r\n      defaultValue={value || defaultValue}\r\n      onChange={value => console.log(JSON.stringify(value))}\r\n    >\r\n      <Editable\r\n        readOnly={readOnly}\r\n        renderElement={renderElement}\r\n        renderMark={renderMark}\r\n      />\r\n    </Slate>\r\n  );\r\n};\r\n\r\nexport default RichTextEditor;\r\n","export { default } from \"./RichTextEditor\";\r\n","import React from \"react\";\r\nimport { Node } from \"slate\";\r\nimport { WrapperWidth } from \"../../general/Wrapper\";\r\nimport { Wrapper, RichTextEditor } from \"./styled\";\r\n\r\ntype RichTextProps = {\r\n  nodes: Node[];\r\n};\r\n\r\n/**\r\n * Read-only Slate editor\r\n */\r\nconst RichText: React.FC<RichTextProps> = ({ nodes }) => (\r\n  <Wrapper width={WrapperWidth.Smaller}>\r\n    <RichTextEditor value={nodes} readOnly />\r\n  </Wrapper>\r\n);\r\n\r\nexport default RichText;\r\n","export { default } from \"./RichText\";\r\n","import styled from \"styled-components\";\r\nimport { Breakpoints } from \"../../../data/style/variables\";\r\n\r\nexport { default as Logo } from \"../../general/Logo\";\r\nexport { default as Wrapper } from \"../../general/Wrapper\";\r\n\r\ntype BackgroundWrapperProps = {\r\n  image: IImage;\r\n  inverted?: boolean;\r\n};\r\n\r\nexport const BackgroundWrapper = styled.div<BackgroundWrapperProps>`\r\n  color: ${props =>\r\n    props.inverted\r\n      ? props.theme.copy.primaryInverted\r\n      : props.theme.copy.primary};\r\n  background: url('${props => props.image.src}') center center / cover;\r\n  background-color: ${props => props.image.fallbackColor};\r\n  min-height: 50vh;\r\n  max-height: 60rem;\r\n  padding-top: 6rem;\r\n  padding-bottom: 6rem;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n\r\n  @media (max-width: ${Breakpoints.H750}) {\r\n    padding-top: 3rem;\r\n    padding-bottom: 3rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { BackgroundWrapper, Wrapper, Logo } from \"./styled\";\r\n\r\ntype ArticleHeroProps = {\r\n  image: IImage;\r\n  inverted?: boolean;\r\n};\r\n\r\nconst ArticleHero: React.FC<ArticleHeroProps> = ({ image, inverted }) => (\r\n  <BackgroundWrapper image={image} inverted={inverted}>\r\n    <Wrapper>\r\n      <Logo showName />\r\n    </Wrapper>\r\n  </BackgroundWrapper>\r\n);\r\n\r\nexport default ArticleHero;\r\n","export { default } from \"./ArticleHero\";\r\n","import styled from \"styled-components\";\r\nimport { Breakpoints } from \"../../../data/style/variables\";\r\nimport Button from \"../../general/Button\";\r\n\r\nexport { default as Logo } from \"../../general/Logo\";\r\nexport { default as Wrapper } from \"../../general/Wrapper\";\r\nexport { default as ArticleHeading } from \"../ArticleHeading\";\r\n\r\ntype BackgroundWrapperProps = {\r\n  image: IImage;\r\n  inverted?: boolean;\r\n};\r\n\r\nexport const BackgroundWrapper = styled.div<BackgroundWrapperProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${props =>\r\n    props.inverted\r\n      ? props.theme.copy.primaryInverted\r\n      : props.theme.copy.primary};\r\n  background: url('${props => props.image.src}') center center / cover;\r\n  background-color: ${props => props.image.fallbackColor};\r\n  min-height: 70vh;\r\n  max-height: 80rem;\r\n  padding-top: 6rem;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n\r\n  @media (max-width: ${Breakpoints.H750}) {\r\n    padding-top: 3rem;\r\n  }\r\n`;\r\n\r\nexport const ArticleHeadingButton = styled(Button)`\r\n  margin-top: auto;\r\n`;\r\n","import React from \"react\";\r\nimport { WrapperWidth } from \"../../general/Wrapper\";\r\nimport createPath from \"../../../util/createPath\";\r\nimport RoutePath from \"../../../data/RoutePath\";\r\nimport {\r\n  BackgroundWrapper,\r\n  Wrapper,\r\n  Logo,\r\n  ArticleHeadingButton,\r\n  ArticleHeading\r\n} from \"./styled\";\r\n\r\ntype FeaturedArticleHeroProps = {\r\n  slug: string;\r\n  image: IImage;\r\n  title: React.ReactNode;\r\n  publishedDate: string;\r\n  tags: number;\r\n  author: IUser;\r\n  inverted?: boolean;\r\n};\r\n\r\nconst FeaturedArticleHero: React.FC<FeaturedArticleHeroProps> = ({\r\n  image,\r\n  slug,\r\n  inverted,\r\n  ...props\r\n}) => (\r\n  <BackgroundWrapper image={image} inverted={inverted}>\r\n    <Wrapper>\r\n      <Logo showName />\r\n    </Wrapper>\r\n\r\n    <ArticleHeadingButton href={createPath(RoutePath.ArticleDetail, { slug })}>\r\n      <ArticleHeading {...props} width={WrapperWidth.Normal} />\r\n    </ArticleHeadingButton>\r\n  </BackgroundWrapper>\r\n);\r\n\r\nexport default FeaturedArticleHero;\r\n","export { default } from \"./FeaturedArticleHero\";\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport ArticleHero from \"../blocks/ArticleHero\";\r\nimport RichText from \"../blocks/RichText\";\r\nimport ArticleHeading from \"../blocks/ArticleHeading\";\r\nimport FeaturedArticleHero from \"../blocks/FeaturedArticleHero\";\r\nimport RichTextEditor from \"../general/RichTextEditor\";\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <ArticleHero\r\n      image={{\r\n        alt: \"Background\",\r\n        fallbackColor: \"#4282EA\",\r\n        src: \"https://source.unsplash.com/1920x1080/?dark\"\r\n      }}\r\n      inverted\r\n    />\r\n\r\n    <ArticleHero\r\n      image={{\r\n        alt: \"Background\",\r\n        fallbackColor: \"#FD4444\",\r\n        src: \"https://source.unsplash.com/1920x1080/?white\"\r\n      }}\r\n    />\r\n\r\n    <FeaturedArticleHero\r\n      slug=\"test-article\"\r\n      image={{\r\n        alt: \"Background\",\r\n        fallbackColor: \"#FD4444\",\r\n        src: \"https://source.unsplash.com/1920x1080/?dark\"\r\n      }}\r\n      author={{\r\n        fullName: \"Leroy Korterink\",\r\n        email: \"leroy@test.com\"\r\n      }}\r\n      tags={3}\r\n      publishedDate=\"2019-12-03T23:54:13.887Z\"\r\n      title={\"The Expertise of\\nConcise Environment\"}\r\n      inverted\r\n    />\r\n\r\n    <ArticleHeading\r\n      author={{\r\n        fullName: \"Leroy Korterink\",\r\n        email: \"leroy@test.com\"\r\n      }}\r\n      tags={2}\r\n      publishedDate=\"2019-12-03T23:54:13.887Z\"\r\n      title={\"The Expertise of\\nConcise Environment\"}\r\n    />\r\n\r\n    <RichText\r\n      nodes={[\r\n        {\r\n          type: \"paragraph\",\r\n          children: [\r\n            {\r\n              text: \"A line of text in a paragraph.\",\r\n              marks: []\r\n            }\r\n          ]\r\n        }\r\n      ]}\r\n    />\r\n\r\n    <RichTextEditor\r\n      value={[\r\n        {\r\n          type: \"paragraph\",\r\n          children: [\r\n            {\r\n              text: \"A line of text in a paragraph.\",\r\n              marks: []\r\n            }\r\n          ]\r\n        }\r\n      ]}\r\n    />\r\n  </Fragment>\r\n);\r\n"],"sourceRoot":""}