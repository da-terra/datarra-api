{"version":3,"sources":["components/blocks/Header/styled.ts","components/blocks/Header/Header.tsx","components/blocks/Header/index.ts","util/hooks/useEvent.ts","util/forms/getInputValue.ts","pages/QuickScan/steps/QuickScanQuestions/reducer.ts","pages/QuickScan/general/QuickScanQuestionButton/QuickScanQuestionButton.tsx","components/general/MultipleChoice/Option/styled.ts","components/general/MultipleChoice/Option/Option.tsx","components/general/MultipleChoice/styled.ts","components/general/MultipleChoice/MultipleChoice.tsx","pages/QuickScan/general/MultipleChoiceQuestion/styled.ts","pages/QuickScan/general/MultipleChoiceQuestion/MultipleChoiceQuestion.tsx","components/general/Range/styled.ts","components/general/Range/Range.tsx","pages/QuickScan/general/RangeQuestion/styled.ts","pages/QuickScan/general/RangeQuestion/RangeQuestion.tsx","pages/QuickScan/general/QuickScanQuestion/styled.ts","pages/QuickScan/general/QuickScanQuestion/QuickScanQuestion.tsx","pages/QuickScan/steps/QuickScanQuestions/styled.ts","pages/QuickScan/steps/QuickScanQuestions/QuickScanQuestions.tsx","pages/QuickScan/steps/QuickScanQuestions/index.ts"],"names":["HeaderWrapper","styled","Wrapper","props","inverted","theme","copy","primaryInverted","primary","Breakpoints","H750","NavigationLinks","div","NavigationLink","LinkButton","ChildrenWrapper","Header","navigationLinks","children","headerRef","useRef","layoutContext","useContext","LayoutContext","current","height","clientHeight","setValue","LayoutStateVariable","HeaderHeight","ref","Logo","showName","map","link","fontWeight","FontWeight","Bold","serif","useEvent","event","callback","useEffect","addEventListener","removeEventListener","getInputValue","form","name","querySelector","value","Action","initialReducerState","currentIndex","state","action","type","Increment","Decrement","QuickScanQuestionButton","question","salutation","OptionWrapper","InfoCard","card","background","shadow","borderRadius","Label","Paragraph","InfoWrapper","visible","ButtonWrapper","OptionButton","IconButton","Option","label","info","onSelect","useState","isInfoVisible","setShowInfo","handleToggleInfo","useCallback","handleSelect","fontColor","FontColor","Secondary","fontSize","FontSize","Small","onClick","active","Icon","Info","Forward","OptionList","ul","OptionItem","li","iconButtonCss","show","css","MultipleChoice","Button","ArrowForward","options","selectTimeout","clearTimeout","setTimeout","option","key","Question","Heading","MultipleChoiceQuestion","_id","submitButtonRef","React","createRef","handleOptionClick","click","headingType","HeadingType","hidden","Value","Slider","accent","Thumb","button","solid","Easings","easeOutExpo","LabelWrapper","labelProps","Range","min","max","labels","leftLabel","rightLabel","thumbRef","sliderRef","eventRaf","mouseEventRaf","sliderBounds","getBoundingClientRect","pageX","touches","maxRawValue","width","rawValue","left","Math","mouseEventHandler","cancelAnimationFrame","requestAnimationFrame","document","body","style","userSelect","handleMouseMove","handleMouseUp","round","SubmitButton","SolidButton","rangeLabels","RangeQuestion","nextQuestion","FormWrapper","next","Component","length","quickScanContext","QuickScanContext","onSubmitHandler","submitEvent","preventDefault","questionId","console","log","parseFloat","currentTarget","setResult","result","answers","onSubmit","H1000","Form","FormHeader","H500","FormHeading","QuestionIndex","QuickScanQuestions","useReducer","reducer","dispatch","questions","data","quickScanQuestions","questionCount","company","to","RoutePath","QuickScanOnboarding","QuickScanContactDetails","x","y","WrapperWidth","Smaller","Accent","QuickScanQuestion"],"mappings":"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","file":"static/js/16.eec47bce.chunk.js","sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\r\nimport { LinkButton } from \"../../general/Button\";\r\nimport Wrapper from \"../../general/Wrapper\";\r\nimport { Breakpoints } from \"../../../data/style/variables\";\r\n\r\nexport { default as Button } from \"../../general/Button\";\r\nexport { default as Logo } from \"../../general/Logo\";\r\n\r\ntype HeaderWrapperProps = {\r\n  inverted?: boolean;\r\n  theme: DefaultTheme;\r\n};\r\n\r\nexport const HeaderWrapper = styled(Wrapper)`\r\n  margin-top: 6.4rem;\r\n  display: flex;\r\n  color: ${(props: HeaderWrapperProps) =>\r\n    props.inverted\r\n      ? props.theme.copy.primaryInverted\r\n      : props.theme.copy.primary};\r\n\r\n  @media (max-width: ${Breakpoints.H750}) {\r\n    margin-top: 2.4rem;\r\n  }\r\n`;\r\n\r\nexport const NavigationLinks = styled.div`\r\n  display: flex;\r\n  margin: auto 0 auto 6.2rem;\r\n`;\r\n\r\nexport const NavigationLink = styled(LinkButton)`\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  &:not(:first-child) {\r\n    margin-left: 6.2rem;\r\n  }\r\n`;\r\n\r\nexport const ChildrenWrapper = styled.div`\r\n  margin-left: auto;\r\n`;\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { FontWeight } from \"../../../data/style/variables\";\r\nimport { LayoutContext, LayoutStateVariable } from \"../../context/Layout\";\r\nimport {\r\n  HeaderWrapper,\r\n  Logo,\r\n  NavigationLinks,\r\n  NavigationLink,\r\n  ChildrenWrapper\r\n} from \"./styled\";\r\n\r\ntype HeaderProps = {\r\n  inverted?: boolean;\r\n  navigationLinks?: (ILink & { uuid: string })[];\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = ({\r\n  inverted,\r\n  navigationLinks,\r\n  children\r\n}) => {\r\n  const headerRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n  const layoutContext = useContext(LayoutContext);\r\n\r\n  if (headerRef.current) {\r\n    const height = (headerRef.current! as HTMLElement).clientHeight;\r\n    layoutContext.setValue(LayoutStateVariable.HeaderHeight, height);\r\n  }\r\n\r\n  return (\r\n    <HeaderWrapper inverted={inverted} ref={headerRef}>\r\n      <Logo showName={!navigationLinks} />\r\n\r\n      {navigationLinks && (\r\n        <NavigationLinks>\r\n          {navigationLinks.map(link => (\r\n            <NavigationLink {...link} fontWeight={FontWeight.Bold} serif>\r\n              {link.children}\r\n            </NavigationLink>\r\n          ))}\r\n        </NavigationLinks>\r\n      )}\r\n\r\n      {children && <ChildrenWrapper>{children}</ChildrenWrapper>}\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export { default } from \"./Header\";\r\n","import { useEffect } from \"react\";\r\n\r\nconst useEvent = <T extends Event>(\r\n  ref: React.RefObject<HTMLElement | null>,\r\n  event: string,\r\n  callback: (event: T) => void\r\n) =>\r\n  useEffect(() => {\r\n    const current = ref.current;\r\n\r\n    if (current == null) {\r\n      return;\r\n    }\r\n\r\n    current.addEventListener(event, callback as any);\r\n\r\n    return () => current.removeEventListener(event, callback as any);\r\n  }, [ref, event, callback]);\r\n\r\nexport default useEvent;\r\n","type FuncType = (\r\n    form: HTMLFormElement | null,\r\n    name: string\r\n  ) => string;\r\n\r\nconst getInputValue: FuncType = (form, name) => \r\n    form\r\n      ? (form.querySelector(`[name=\"${name}\"]`) as HTMLInputElement).value\r\n      : \"\";\r\n\r\n      export default getInputValue;","export enum Action {\r\n  Increment,\r\n  Decrement\r\n}\r\n\r\nexport type State = {\r\n  currentIndex: number;\r\n};\r\n\r\nexport const initialReducerState = {\r\n  currentIndex: 0\r\n};\r\n\r\nexport default (state: State, action: { type: Action; value?: any }) => {\r\n  if (action.type === Action.Increment) {\r\n    return { currentIndex: state.currentIndex + 1 };\r\n  }\r\n\r\n  if (action.type === Action.Decrement) {\r\n    return { currentIndex: state.currentIndex - 1 };\r\n  }\r\n\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport { SolidButton } from \"../../../../components/general/Button\";\r\n\r\ntype QuickScanQuestionButtonProps = {\r\n  className?: string;\r\n  onClick?: () => void\r\n  question: IQuickScanQuestion | undefined;\r\n};\r\n\r\nconst QuickScanQuestionButton: React.FC<QuickScanQuestionButtonProps> = ({\r\n  question,\r\n  ...props\r\n}) => (\r\n  <SolidButton {...props} type=\"submit\">\r\n    {!question\r\n      ? \"Naar volgende stap\"\r\n      : question.salutation || \"Naar volgende vraag\"}\r\n  </SolidButton>\r\n);\r\n\r\nexport default QuickScanQuestionButton;\r\n","import styled from \"styled-components\";\r\nimport Paragraph from \"../../Paragraph\";\r\nimport { IconButton } from \"../../Button\";\r\n\r\nexport { default as Icon } from \"../../Icon\";\r\n\r\nexport const OptionWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nexport const InfoCard = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 1.5rem 2.5rem;\r\n  background: ${props => props.theme.card.background};\r\n  box-shadow: ${props => props.theme.card.shadow};\r\n  border-radius: ${props => props.theme.card.borderRadius}px;\r\n`;\r\n\r\nexport const Label = Paragraph;\r\n\r\nexport const InfoWrapper = styled(Paragraph)<{ visible: boolean }>`\r\n  display: ${props => (props.visible ? \"block\" : \"none\")};\r\n  margin-top: 1rem;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  margin-left: 1.5rem;\r\n`;\r\n\r\nexport const OptionButton = styled(IconButton)`\r\n  margin-left: auto;\r\n\r\n  &:not(:first-child) {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { FontColor, FontSize } from \"../../../../data/style/variables\";\r\nimport {\r\n  OptionWrapper,\r\n  InfoCard,\r\n  Label,\r\n  InfoWrapper,\r\n  ButtonWrapper,\r\n  OptionButton,\r\n  Icon\r\n} from \"./styled\";\r\n\r\nexport type OptionProps = {\r\n  label: React.ReactNode;\r\n  value: any;\r\n  info: React.ReactNode;\r\n  onSelect?: (\r\n    value: any,\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => void;\r\n};\r\n\r\nconst Option: React.FC<OptionProps> = ({ label, value, info, onSelect }) => {\r\n  const [isInfoVisible, setShowInfo] = useState<boolean>(false);\r\n\r\n  const handleToggleInfo = useCallback(() => {\r\n    setShowInfo(!isInfoVisible);\r\n  }, [setShowInfo, isInfoVisible]);\r\n\r\n  const handleSelect = useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\r\n      onSelect && onSelect(value, event),\r\n    [onSelect, value]\r\n  );\r\n\r\n  return (\r\n    <OptionWrapper>\r\n      <InfoCard>\r\n        <Label>{label}</Label>\r\n\r\n        {info && (\r\n          <InfoWrapper\r\n            fontColor={FontColor.Secondary}\r\n            fontSize={FontSize.Small}\r\n            visible={isInfoVisible}\r\n          >\r\n            {info}\r\n          </InfoWrapper>\r\n        )}\r\n      </InfoCard>\r\n      <ButtonWrapper>\r\n        {info && (\r\n          <OptionButton\r\n            onClick={handleToggleInfo}\r\n            active={isInfoVisible}\r\n            inverted\r\n          >\r\n            <Icon.Info />\r\n          </OptionButton>\r\n        )}\r\n\r\n        <OptionButton onClick={handleSelect}>\r\n          <Icon.Forward />\r\n        </OptionButton>\r\n      </ButtonWrapper>\r\n    </OptionWrapper>\r\n  );\r\n};\r\n\r\nexport default Option;\r\n","import styled, { css } from \"styled-components\";\r\nimport Icon from \"../../../components/general/Icon\";\r\nimport Button from \"../Button\";\r\n\r\nexport { default as Option } from \"./Option\";\r\n\r\nexport const OptionList = styled.ul`\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport const OptionItem = styled.li`\r\n  &:not(:last-child) {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const InfoWrapper = styled.div<{ show: boolean }>`\r\n  display: ${props => (props.show ? \"block\" : \"none\")};\r\n`;\r\n\r\nconst iconButtonCss = css`\r\n  opacity: 0.5;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const InfoToggleButton = styled(Button)`\r\n  ${iconButtonCss}\r\n`;\r\n\r\nexport const OptionSelectButton = styled(Button)`\r\n  ${iconButtonCss}\r\n`;\r\n\r\nexport const InfoToggleIcon = styled(Icon.ArrowForward)``;\r\nexport const SelectButtonIcon = styled(Icon.ArrowForward)``;\r\n","import React, {\r\n  Fragment,\r\n  useState,\r\n  useCallback,\r\n  useRef,\r\n  useEffect\r\n} from \"react\";\r\nimport { OptionList, OptionItem, Option } from \"./styled\";\r\n\r\ntype MultipleChoiceProps = {\r\n  name: string;\r\n  options: {\r\n    label: React.ReactNode;\r\n    value: any;\r\n    info: React.ReactNode;\r\n  }[];\r\n  onClick?: (\r\n    value: any,\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => void;\r\n};\r\n\r\nconst MultipleChoice: React.FC<MultipleChoiceProps> = ({\r\n  name,\r\n  options,\r\n  onClick\r\n}) => {\r\n  const [value, setValue] = useState<any>(\"\");\r\n  const selectTimeout = useRef(0);\r\n\r\n  const handleSelect = useCallback(\r\n    (value, event) => {\r\n      setValue(value);\r\n\r\n      // Call onClick after callstack is clear\r\n      clearTimeout(selectTimeout.current);\r\n      selectTimeout.current = setTimeout(\r\n        () => onClick && onClick(value, event),\r\n        0\r\n      );\r\n    },\r\n    [setValue, onClick]\r\n  );\r\n\r\n  useEffect(() => () => {\r\n    clearTimeout(selectTimeout.current);\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <OptionList>\r\n        {options.map(option => (\r\n          <OptionItem key={option.value}>\r\n            <Option {...option} onSelect={handleSelect} />\r\n          </OptionItem>\r\n        ))}\r\n      </OptionList>\r\n\r\n      <input type=\"hidden\" name={name} value={value} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MultipleChoice;\r\n","import styled from \"styled-components\";\r\nimport Heading from \"../../../../components/general/Heading\";\r\nexport {\r\n  default as MultipleChoice\r\n} from \"../../../../components/general/MultipleChoice\";\r\n\r\nexport const Wrapper = styled.div``;\r\n\r\nexport const Question = styled(Heading)`\r\n  margin-bottom: 4rem;\r\n`;\r\n","import React, { useCallback } from \"react\";\r\nimport { HeadingType } from \"../../../../components/general/Heading\";\r\nimport { Wrapper, Question, MultipleChoice } from \"./styled\";\r\n\r\ntype MultipleChoiceQuestionProps = {\r\n  nextQuestion?: IQuickScanQuestion;\r\n} & IQuickScanQuestion;\r\n\r\nconst MultipleChoiceQuestion: React.FC<MultipleChoiceQuestionProps> = ({\r\n  _id,\r\n  question,\r\n  options\r\n}) => {\r\n  const submitButtonRef = React.createRef<HTMLButtonElement>();\r\n\r\n  const handleOptionClick = useCallback(() => {\r\n    if (!submitButtonRef.current) {\r\n      return;\r\n    }\r\n\r\n    submitButtonRef.current.click();\r\n  }, [submitButtonRef]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Question headingType={HeadingType.Secondary}>{question}</Question>\r\n\r\n      <MultipleChoice\r\n        name={_id}\r\n        options={options!}\r\n        onClick={handleOptionClick}\r\n      />\r\n\r\n      <button type=\"submit\" ref={submitButtonRef} hidden>\r\n        Naar volgende vraag\r\n      </button>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default MultipleChoiceQuestion;\r\n","import styled from \"styled-components\";\r\nimport Heading from \"../Heading\";\r\nimport Paragraph from \"../Paragraph\";\r\nimport Easings from \"../../../data/style/easings\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Value = styled(Heading)`\r\n  margin-left: auto;\r\n  margin-bottom: 2.4rem;\r\n`;\r\n\r\nexport const Slider = styled.div`\r\n  position: relative;\r\n  height: 1.5rem;\r\n  background: ${props => props.theme.background.accent};\r\n  border-radius: 1.5rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Thumb = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 1.5rem;\r\n  height: calc(100% + 2rem);\r\n  border-radius: 1.5rem;\r\n  background: ${props => props.theme.copy.primary};\r\n  box-shadow: ${props => props.theme.button.solid.shadow}\r\n  transition: left .1s ${Easings.easeOutExpo};\r\n  cursor: pointer;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nexport const LabelWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 3.2rem;\r\n`;\r\n\r\nexport const Label = Paragraph;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport useEvent from \"../../../util/hooks/useEvent\";\r\nimport { Wrapper, Value, Slider, Thumb, LabelWrapper, Label } from \"./styled\";\r\nimport { FontWeight, FontSize, FontColor } from \"../../../data/style/variables\";\r\n\r\ntype RangeProps = {\r\n  name: string;\r\n  min?: number;\r\n  max?: number;\r\n  labels: [React.ReactNode, React.ReactNode];\r\n};\r\n\r\nconst scale = 100;\r\n\r\nconst labelProps = {\r\n  fontWeight: FontWeight.Bold,\r\n  fontSize: FontSize.Small,\r\n  fontColor: FontColor.Secondary\r\n};\r\n\r\nconst Range: React.FC<RangeProps> = function({\r\n  name,\r\n  min = 0,\r\n  max = 1,\r\n  labels: [leftLabel, rightLabel]\r\n}) {\r\n  const [value, setValue] = useState<number>(0);\r\n\r\n  const thumbRef = useRef<HTMLDivElement>(null);\r\n  const sliderRef = useRef<HTMLDivElement>(null);\r\n\r\n  const eventRaf = useRef(0);\r\n\r\n  // Update the value for the range slider\r\n  const mouseEventRaf = (event: MouseEvent | TouchEvent) => () => {\r\n    if (sliderRef.current == null) {\r\n      return;\r\n    }\r\n    \r\n    const sliderBounds = sliderRef.current!.getBoundingClientRect();\r\n\r\n    // Get pageX from MouseEvent or first item in TouchList\r\n    // @ts-ignore\r\n    let pageX = event.touches ? event.touches[0].pageX : event.pageX;\r\n\r\n    const maxRawValue = sliderBounds.width;\r\n    const minRawValue = 0;\r\n    const rawValue = pageX - sliderBounds.left;\r\n\r\n    const value = Math.max(minRawValue, Math.min(rawValue, maxRawValue));\r\n\r\n    setValue((1 / maxRawValue) * value);\r\n  };\r\n\r\n  const mouseEventHandler = (event: MouseEvent | TouchEvent) => {\r\n    // Update value to initial position\r\n    cancelAnimationFrame(eventRaf.current);\r\n    eventRaf.current = requestAnimationFrame(mouseEventRaf(event));\r\n\r\n    // Disable user select when dragging along the slider\r\n    document.body.style.userSelect = \"none\";\r\n\r\n    // Use animation frame to make sure that the UI stays smooth\r\n    const handleMouseMove = (event: MouseEvent | TouchEvent) => {\r\n      cancelAnimationFrame(eventRaf.current);\r\n      eventRaf.current = requestAnimationFrame(mouseEventRaf(event));\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      document.body.style.userSelect = \"\";\r\n      document.removeEventListener(\"mousemove\", handleMouseMove);\r\n    };\r\n\r\n    document.addEventListener(\"mousemove\", handleMouseMove);\r\n    document.addEventListener(\"touchmove\", handleMouseMove);\r\n\r\n    document.addEventListener(\"mouseup\", handleMouseUp);\r\n    document.addEventListener(\"touchend\", handleMouseUp);\r\n  };\r\n\r\n  // Event handler for thumb drag behavior\r\n  useEvent<MouseEvent>(thumbRef, \"mousedown\", mouseEventHandler);\r\n  useEvent<MouseEvent>(sliderRef, \"mousedown\", mouseEventHandler);\r\n\r\n  // Event handler for slider click behavior\r\n  useEvent<TouchEvent>(thumbRef, \"touchstart\", mouseEventHandler);\r\n  useEvent<TouchEvent>(sliderRef, \"touchstart\", mouseEventHandler);\r\n\r\n  useEffect(() => () => cancelAnimationFrame(eventRaf.current), []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Value>{Math.round(value * 10)}/{10}</Value>\r\n\r\n      <Slider ref={sliderRef}>\r\n        <Thumb style={{ left: `${value * scale}%` }} ref={thumbRef} />\r\n      </Slider>\r\n\r\n      <LabelWrapper>\r\n        <Label {...labelProps}>{leftLabel}</Label>\r\n        <Label {...labelProps}>{rightLabel}</Label>\r\n      </LabelWrapper>\r\n\r\n      <input type=\"hidden\" name={name} value={(max - min) * value + min} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Range;\r\n","import styled from \"styled-components\";\r\nimport Heading from \"../../../../components/general/Heading\";\r\nimport { SolidButton } from \"../../../../components/general/Button\";\r\n\r\nexport { default as Range } from \"../../../../components/general/Range\";\r\n\r\nexport const Question = Heading;\r\n\r\nexport const SubmitButton = styled(SolidButton)`\r\n  margin: 4rem auto auto;\r\n`;\r\n","import React, { Fragment } from \"react\";\r\nimport { Question, Range, SubmitButton } from \"./styled\";\r\nimport { HeadingType } from \"../../../../components/general/Heading\";\r\n\r\ntype RangeQuestionProps = {\r\n  nextQuestion?: IQuickScanQuestion;\r\n} & IQuickScanQuestion;\r\n\r\nconst rangeLabels: [React.ReactNode, React.ReactNode] = [\"Niet mee eens\", \"Mee eens\"];\r\n\r\nconst RangeQuestion: React.FC<RangeQuestionProps> = ({\r\n  _id,\r\n  question,\r\n  min,\r\n  max,\r\n  nextQuestion\r\n}) => (\r\n  <Fragment>\r\n    <Question headingType={HeadingType.Secondary}>{question}</Question>\r\n\r\n    <Range\r\n      name={_id}\r\n      min={min}\r\n      max={max}\r\n      labels={rangeLabels}\r\n    />\r\n\r\n    <SubmitButton type=\"submit\">\r\n      {(nextQuestion && nextQuestion.salutation) || \"Naar volgende vraag\"}\r\n    </SubmitButton>\r\n  </Fragment>\r\n);\r\n\r\nexport default RangeQuestion;\r\n","import styled from \"styled-components\";\r\nimport QuickScanQuestionButton from \"../QuickScanQuestionButton\";\r\n\r\nexport { default as MultipleChoiceQuestion } from \"../MultipleChoiceQuestion\";\r\nexport { default as RangeQuestion } from \"../RangeQuestion\";\r\n\r\nexport const FormWrapper = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const SubmitButton = styled(QuickScanQuestionButton)`\r\n  margin: 4rem auto 0;\r\n`;\r\n","import React, { useCallback, useContext } from \"react\";\r\nimport getInputValue from \"../../../../util/forms/getInputValue\";\r\nimport { Context as QuickScanContext } from \"../../QuickScan\";\r\nimport { FormWrapper, MultipleChoiceQuestion, RangeQuestion } from \"./styled\";\r\n\r\ntype QuestionProps = {\r\n  question: IQuickScanQuestion;\r\n  nextQuestion?: IQuickScanQuestion;\r\n  next: () => void;\r\n};\r\n\r\nconst Question: React.FC<QuestionProps> = ({\r\n  question,\r\n  nextQuestion,\r\n  next\r\n}) => {\r\n  const Component =\r\n    question.options && question.options.length //\r\n      ? MultipleChoiceQuestion\r\n      : RangeQuestion;\r\n\r\n  const quickScanContext = useContext(QuickScanContext);\r\n\r\n  const onSubmitHandler = useCallback(\r\n    (submitEvent: React.FormEvent<HTMLFormElement>) => {\r\n      submitEvent.preventDefault();\r\n\r\n      const questionId = question._id;\r\n\r\n      console.log(\"string value: \");\r\n      console.log(parseFloat(\"3.333\"));\r\n      console.log(getInputValue(submitEvent.currentTarget, questionId));\r\n\r\n      const value = parseFloat(\r\n        getInputValue(submitEvent.currentTarget, questionId)\r\n      );\r\n\r\n      // Validate answer\r\n      if (value == null || value < 0) {\r\n        return;\r\n      }\r\n\r\n      // Save question to results object\r\n      quickScanContext.setResult({\r\n        ...quickScanContext.result,\r\n        answers: {\r\n          ...quickScanContext.result.answers,\r\n          [questionId]: value\r\n        }\r\n      });\r\n\r\n      next();\r\n    },\r\n    [next, question, quickScanContext]\r\n  );\r\n\r\n  return (\r\n    <FormWrapper onSubmit={onSubmitHandler}>\r\n      <Component {...question} key={question._id} nextQuestion={nextQuestion} />\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import styled from \"styled-components\";\r\nimport Heading from \"../../../../components/general/Heading\";\r\nimport Paragraph from \"../../../../components/general/Paragraph\";\r\nimport QuickScanQuestionButton from \"../../general/QuickScanQuestionButton\";\r\nimport Wrapper from \"../../../../components/general/Wrapper\";\r\nimport { Breakpoints } from \"../../../../data/style/variables\";\r\n\r\nexport { Circle } from \"../../../../util/layout\";\r\nexport { default as Header } from \"../../../../components/blocks/Header\";\r\nexport { default as QuickScanQuestion } from \"../../general/QuickScanQuestion\";\r\n\r\nexport const Content = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  display: flex;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  padding: 10rem 0;\r\n  pointer-events: none;\r\n\r\n  @media (max-width: ${Breakpoints.H1000}) {\r\n    position: relative;\r\n    min-height: 0;\r\n    padding: 6.4rem 0;\r\n  }\r\n`;\r\n\r\nexport const Form = styled(Wrapper)`\r\n  margin: 4rem auto;\r\n  pointer-events: all;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const FormHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5.2rem;\r\n\r\n  @media (max-width: ${Breakpoints.H500}) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const FormHeading = styled(Heading)``;\r\n\r\nexport const QuestionIndex = styled(Paragraph)`\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const SubmitButton = styled(QuickScanQuestionButton)`\r\n  margin: 6.2rem auto 0;\r\n`;\r\n","import React, { Fragment, useContext, useReducer } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport RoutePath from \"../../../../data/RoutePath\";\r\nimport { FontColor, FontWeight } from \"../../../../data/style/variables\";\r\nimport { HeadingType } from \"../../../../components/general/Heading\";\r\nimport { WrapperWidth } from \"../../../../components/general/Wrapper\";\r\nimport { Context as QuickScanContext } from \"../../QuickScan\";\r\nimport reducer, { initialReducerState, Action } from \"./reducer\";\r\nimport {\r\n  Header,\r\n  Circle,\r\n  Form,\r\n  FormHeader,\r\n  FormHeading,\r\n  QuestionIndex,\r\n  QuickScanQuestion\r\n} from \"./styled\";\r\n\r\nconst QuickScanQuestions = () => {\r\n  const quickScanContext = useContext(QuickScanContext);\r\n  const [state, dispatch] = useReducer(reducer, initialReducerState);\r\n\r\n  const questions = quickScanContext.data!.quickScanQuestions;\r\n  const questionCount = questions.length;\r\n\r\n  const currentIndex = state.currentIndex;\r\n\r\n  if (quickScanContext.result.company == null) {\r\n    return <Redirect to={RoutePath.QuickScanOnboarding} />;\r\n  }\r\n\r\n  if (currentIndex >= questionCount) {\r\n    return <Redirect to={RoutePath.QuickScanContactDetails} />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n\r\n      <Circle x={25} y={-20} />\r\n\r\n      <Form width={WrapperWidth.Smaller}>\r\n        <FormHeader>\r\n          <FormHeading\r\n            headingType={HeadingType.Secondary}\r\n            fontColor={FontColor.Accent}\r\n          >\r\n            Quick Scan\r\n          </FormHeading>\r\n\r\n          <QuestionIndex\r\n            fontColor={FontColor.Secondary}\r\n            fontWeight={FontWeight.Bold}\r\n          >\r\n            Vraag {currentIndex + 1} van {questionCount}\r\n          </QuestionIndex>\r\n        </FormHeader>\r\n\r\n        <QuickScanQuestion\r\n          question={questions[currentIndex]}\r\n          nextQuestion={questions[currentIndex + 1]}\r\n          next={() => dispatch({ type: Action.Increment })}\r\n        />\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuickScanQuestions;\r\n","export { default } from \"./QuickScanQuestions\";\r\n"],"sourceRoot":""}