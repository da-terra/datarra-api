{"version":3,"sources":["components/blocks/Header/styled.ts","components/blocks/Header/Header.tsx","components/blocks/Header/index.ts","components/general/Input/data/InputType.ts","util/hooks/useEvent.ts","components/general/IconTooltip/styled.ts","components/general/IconTooltip/IconTooltip.tsx","components/general/Input/styled.ts","components/general/Input/Input.tsx","components/general/Input/index.ts","components/general/InputGroup/styled.ts","components/general/InputGroup/index.ts","util/forms/validators/requiredValidator.ts","util/forms/validators/optionalUrlValidator.ts","util/forms/validators/optionalNumberValidator.ts","util/forms/formatters/numberFormatter.ts","pages/QuickScan/steps/QuickScanOnboarding/styled.ts","pages/QuickScan/steps/QuickScanOnboarding/QuickScanOnBoarding.tsx","pages/QuickScan/steps/QuickScanOnboarding/index.ts"],"names":["HeaderWrapper","styled","Wrapper","props","inverted","theme","copy","primaryInverted","primary","Breakpoints","H750","NavigationLinks","div","NavigationLink","LinkButton","ChildrenWrapper","Header","navigationLinks","children","headerRef","useRef","layoutContext","useContext","LayoutContext","current","height","clientHeight","setValue","LayoutStateVariable","HeaderHeight","ref","Logo","showName","map","link","fontWeight","FontWeight","Bold","serif","InputType","useEvent","event","callback","useEffect","addEventListener","removeEventListener","appearWrapper","keyframes","appearTooltip","IconWrapper","Tooltip","tooltip","backgroundColor","shadow","IconTooltip","className","error","icon","Icon","Info","targetRef","useState","isVisible","setVisible","Component","IconComponent","secondary","Label","label","input","padding","Black","Easings","easeOutExpo","InputElement","borderColor","borderRadius","copyColor","InputWrapper","Input","defaultValue","type","Text","onChange","formatter","validator","value","setTooltip","changed","setChanged","changeCallback","useCallback","newValue","currentTarget","hasError","placeholder","id","name","htmlFor","InputGroup","fieldset","requiredValidator","Error","urlValidator","test","numberValidator","numberFormatter","replace","headerHeight","Form","form","FormHeading","Heading","FormParagraph","Paragraph","SubmitButton","SolidButton","QuickScanOnboarding","quickScanContext","QuickScanContext","history","useHistory","submitHandler","preventDefault","formData","FormData","target","company","companyName","get","website","sector","region","employeeCount","parseInt","setResult","result","push","RoutePath","QuickScanQuestions","x","y","width","WrapperWidth","Smaller","onSubmit","headingType","HeadingType","Secondary","fontColor","FontColor","Accent","Number"],"mappings":"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","file":"static/js/10.6965a2f7.chunk.js","sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\r\nimport { LinkButton } from \"../../general/Button\";\r\nimport Wrapper from \"../../general/Wrapper\";\r\nimport { Breakpoints } from \"../../../data/style/variables\";\r\n\r\nexport { default as Button } from \"../../general/Button\";\r\nexport { default as Logo } from \"../../general/Logo\";\r\n\r\ntype HeaderWrapperProps = {\r\n  inverted?: boolean;\r\n  theme: DefaultTheme;\r\n};\r\n\r\nexport const HeaderWrapper = styled(Wrapper)`\r\n  margin-top: 6.4rem;\r\n  display: flex;\r\n  color: ${(props: HeaderWrapperProps) =>\r\n    props.inverted\r\n      ? props.theme.copy.primaryInverted\r\n      : props.theme.copy.primary};\r\n\r\n  @media (max-width: ${Breakpoints.H750}) {\r\n    margin-top: 2.4rem;\r\n  }\r\n`;\r\n\r\nexport const NavigationLinks = styled.div`\r\n  display: flex;\r\n  margin: auto 0 auto 6.2rem;\r\n`;\r\n\r\nexport const NavigationLink = styled(LinkButton)`\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  &:not(:first-child) {\r\n    margin-left: 6.2rem;\r\n  }\r\n`;\r\n\r\nexport const ChildrenWrapper = styled.div`\r\n  margin-left: auto;\r\n`;\r\n","import React, { useRef, useContext } from \"react\";\r\nimport { FontWeight } from \"../../../data/style/variables\";\r\nimport { LayoutContext, LayoutStateVariable } from \"../../context/Layout\";\r\nimport {\r\n  HeaderWrapper,\r\n  Logo,\r\n  NavigationLinks,\r\n  NavigationLink,\r\n  ChildrenWrapper\r\n} from \"./styled\";\r\n\r\ntype HeaderProps = {\r\n  inverted?: boolean;\r\n  navigationLinks?: (ILink & { uuid: string })[];\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = ({\r\n  inverted,\r\n  navigationLinks,\r\n  children\r\n}) => {\r\n  const headerRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n  const layoutContext = useContext(LayoutContext);\r\n\r\n  if (headerRef.current) {\r\n    const height = (headerRef.current! as HTMLElement).clientHeight;\r\n    layoutContext.setValue(LayoutStateVariable.HeaderHeight, height);\r\n  }\r\n\r\n  return (\r\n    <HeaderWrapper inverted={inverted} ref={headerRef}>\r\n      <Logo showName={!navigationLinks} />\r\n\r\n      {navigationLinks && (\r\n        <NavigationLinks>\r\n          {navigationLinks.map(link => (\r\n            <NavigationLink {...link} fontWeight={FontWeight.Bold} serif>\r\n              {link.children}\r\n            </NavigationLink>\r\n          ))}\r\n        </NavigationLinks>\r\n      )}\r\n\r\n      {children && <ChildrenWrapper>{children}</ChildrenWrapper>}\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export { default } from \"./Header\";\r\n","enum InputType {\r\n  Text = \"text\",\r\n  // Use tel input type for numbers because it won't always trigger the on change event\r\n  Number = \"tel\",\r\n  Search = \"search\",\r\n  Email = \"email\",\r\n  Phone = \"tel\",\r\n  Password = \"password\",\r\n}\r\n\r\nexport default InputType;","import { useEffect } from \"react\";\r\n\r\nconst useEvent = <T extends Event>(\r\n  ref: React.RefObject<HTMLElement | null>,\r\n  event: string,\r\n  callback: (event: T) => void\r\n) =>\r\n  useEffect(() => {\r\n    const current = ref.current;\r\n\r\n    if (current == null) {\r\n      return;\r\n    }\r\n\r\n    current.addEventListener(event, callback as any);\r\n\r\n    return () => current.removeEventListener(event, callback as any);\r\n  }, [ref, event, callback]);\r\n\r\nexport default useEvent;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst appearWrapper = keyframes`\r\n  0% {\r\n    transform: translateY(1rem);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateY(0rem);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst appearTooltip = keyframes`\r\n  0% {\r\n    transform: translate(1rem, -50%);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translate(0rem, -50%);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  animation: 0.5s ${appearWrapper} forwards;\r\n\r\n  svg {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const Tooltip = styled.div`\r\n  position: absolute;\r\n  left: -1rem;\r\n  top: 50%;\r\n  padding: 1rem 1.5rem 1rem 4.5rem;\r\n  border-radius: 0.8rem;\r\n  white-space: nowrap;\r\n  background: ${props => props.theme.tooltip.backgroundColor};\r\n  box-shadow: ${props => props.theme.tooltip.shadow};\r\n  animation: 0.4s ${appearTooltip} forwards;\r\n`;\r\n","import React, { useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useEvent from \"../../../util/hooks/useEvent\";\r\nimport Icon from \"../Icon\";\r\nimport { Wrapper, Tooltip, IconWrapper } from \"./styled\";\r\n\r\nexport type IconTooltipProps = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  error?: boolean;\r\n  icon: React.FC;\r\n};\r\n\r\nconst IconTooltip: React.FC<IconTooltipProps> = ({\r\n  children,\r\n  className,\r\n  error,\r\n  icon = Icon.Info\r\n}) => {\r\n  const targetRef = useRef(null);\r\n  const [isVisible, setVisible] = useState(false);\r\n\r\n  useEvent(targetRef, \"mouseenter\", () => setVisible(true));\r\n  useEvent(targetRef, \"mouseleave\", () => setVisible(false));\r\n\r\n  const Component = icon;\r\n  const IconComponent = styled(({error, ...props }) => <Component {...props} />)`\r\n    cursor: pointer;\r\n    fill: ${props => props.error ? props.theme.copy.error : props.theme.copy.secondary};\r\n  `;\r\n\r\n  return (\r\n    <Wrapper className={className} ref={targetRef}>\r\n      {isVisible && <Tooltip>{children}</Tooltip>}\r\n\r\n      <IconWrapper>\r\n        <IconComponent error={error} />\r\n      </IconWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default IconTooltip;\r\n","import styled from \"styled-components\";\r\nimport IconTooltip from \"../../general/IconTooltip\";\r\nimport { FontWeight } from \"../../../data/style/variables\";\r\nimport Easings from \"../../../data/style/easings\";\r\n\r\nexport const Tooltip = styled(IconTooltip)`\r\n  position: absolute;\r\n  right: 2rem;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  position: absolute;\r\n  left: ${props => props.theme.input.padding}rem;\r\n  font-weight: ${FontWeight.Black};\r\n  font-size: 1.6rem;\r\n  pointer-events: none;\r\n  transition: 0.25s ${Easings.easeOutExpo} all;\r\n`;\r\n\r\nexport const InputElement = styled.input`\r\n  background: ${props => props.theme.input.backgroundColor};\r\n  border: 1px solid ${props => props.theme.input.borderColor};\r\n  border-radius: ${props => props.theme.input.borderRadius}rem;\r\n  color: ${props => props.theme.input.copyColor};\r\n  font-size: 1.6rem;\r\n  line-height: 1;\r\n  min-height: 7rem;\r\n  outline: none;\r\n  padding: 0 ${props => props.theme.input.padding}rem;\r\n  position: relative;\r\n  transition: 0.2s ${Easings.easeOutExpo} border-color;\r\n  width: 100%;\r\n\r\n  &::-webkit-outer-spin-button,\r\n  &::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  /* Firefox */\r\n  &[type=number] {\r\n    -moz-appearance:textfield;\r\n  }\r\n\r\n  &:placeholder-shown {\r\n    padding-top: 1rem;\r\n    padding-bottom: 1rem;\r\n\r\n    &:focus + ${Label} {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n\r\n  &:not(:placeholder-shown) {\r\n    padding-top: 2rem;\r\n  }\r\n\r\n  &:not(:placeholder-shown) + ${Label} {\r\n    transform: translateY(-1rem);\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\ntype WrapperProps = {\r\n  children: React.ReactNode;\r\n  hasError?: boolean;\r\n};\r\n\r\nexport const InputWrapper = styled.div<WrapperProps>`\r\n  display: inline-flex;\r\n  position: relative;\r\n  font-size: 1.4rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import React, { useState, useCallback, ChangeEvent, useEffect } from \"react\";\r\nimport InputType from \"./data/InputType\";\r\nimport { IconTooltipProps } from \"../IconTooltip/IconTooltip\";\r\nimport { InputWrapper, Label, InputElement, Tooltip } from \"./styled\";\r\n\r\ntype InputProps = {\r\n  className?: string;\r\n  defaultValue?: string;\r\n  label: string;\r\n  name: string;\r\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  type?: InputType;\r\n\r\n  // Custom input behavior\r\n  tooltip?: IconTooltipProps;\r\n  formatter?: (value: string, event: ChangeEvent<HTMLInputElement>) => string;\r\n  validator?: (\r\n    value: string\r\n  ) => ({ preview?: boolean } & IconTooltipProps) | null;\r\n};\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  className,\r\n  defaultValue = \"\",\r\n  type = InputType.Text,\r\n\r\n  onChange,\r\n  label,\r\n  formatter,\r\n  validator,\r\n\r\n  ...props\r\n}) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  const [tooltip, setTooltip] = useState();\r\n  const [changed, setChanged] = useState(false);\r\n\r\n  /** Run validator on mount to show the validator preview if requested */\r\n  useEffect(() => {\r\n    if (!validator) {\r\n      return;\r\n    }\r\n\r\n    setTooltip(validator(defaultValue));\r\n  }, [setTooltip, defaultValue, validator]);\r\n\r\n  const changeCallback = useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      const newValue = formatter\r\n        ? formatter(event.currentTarget.value, event)\r\n        : event.currentTarget.value;\r\n\r\n      setValue(newValue);\r\n\r\n      // Update changed field\r\n      !changed && setChanged(true);\r\n\r\n      // Validate input\r\n      validator && setTooltip(validator(newValue));\r\n\r\n      // Forward change event\r\n      onChange && onChange(event);\r\n    },\r\n    [formatter, validator, changed, onChange]\r\n  );\r\n\r\n  return (\r\n    <InputWrapper className={className} hasError>\r\n      <InputElement\r\n        {...props}\r\n        placeholder=\" \"\r\n        id={props.name}\r\n        value={value}\r\n        type={type}\r\n        onChange={changeCallback}\r\n      />\r\n\r\n      <Label htmlFor={props.name}>{label}</Label>\r\n\r\n      {tooltip && (\r\n        <Tooltip icon={tooltip.icon} error={changed}>\r\n          {tooltip.children}\r\n        </Tooltip>\r\n      )}\r\n    </InputWrapper>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","export { default } from \"./Input\";\r\n","import styled from \"styled-components\";\r\nimport { InputElement, InputWrapper } from \"../Input/styled\";\r\n\r\nexport const InputGroup = styled.fieldset`\r\n  padding: 0;\r\n  border: none;\r\n\r\n  ${InputWrapper} {\r\n    width: 100%;\r\n    display: flex;\r\n\r\n    ${InputElement} {\r\n      border-radius: 0;\r\n      border: none;\r\n    }\r\n\r\n    &:not(:first-child)::before {\r\n      content: \"\";\r\n      display: block;\r\n      width: calc(100% - ${props => props.theme.input.padding * 2}rem);\r\n      border-bottom: 1px solid ${props => props.theme.input.borderColor};\r\n      position: absolute;\r\n      top: 0;\r\n      z-index: 1;\r\n    }\r\n\r\n    &:first-child ${InputElement} {\r\n      border-top-left-radius: ${props => props.theme.input.borderRadius}rem;\r\n      border-top-right-radius: ${props => props.theme.input.borderRadius}rem;\r\n    }\r\n\r\n    &:last-child ${InputElement} {\r\n      border-bottom-left-radius: ${props => props.theme.input.borderRadius}rem;\r\n      border-bottom-right-radius: ${props => props.theme.input.borderRadius}rem;\r\n    }\r\n  }\r\n`;\r\n","export { InputGroup as default } from \"./styled\";\r\n","import Icon from \"../../../components/general/Icon\";\r\n\r\nconst requiredValidator = (value: string) => {\r\n  if (value !== \"\") {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    icon: Icon.Error,\r\n    children: \"Dit veld is verplicht\"\r\n  };\r\n};\r\n\r\nexport default requiredValidator;\r\n","import Icon from \"../../../components/general/Icon\";\r\n\r\nconst urlValidator = (value: string) => {\r\n  if (value === \"\") {\r\n    return null\r\n  }\r\n\r\n  const isValid = /^(https?:\\/\\/)?[a-z0-9-.]+\\.[a-z0-9-]{2,63}\\/?$/ig.test(value);\r\n\r\n  if (isValid) {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    icon: Icon.Error,\r\n    children: \"Opgegeven url is niet geldig\"\r\n  }\r\n};\r\n\r\nexport default urlValidator;","import Icon from \"../../../components/general/Icon\";\r\n\r\nconst numberValidator = (value: string) => {\r\n  if (value === \"\") {\r\n    return null\r\n  }\r\n\r\n  const isValid = /^[0-9]+$/.test(value);\r\n\r\n  if (isValid) {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    icon: Icon.Error,\r\n    children: \"In dit veld zijn alleen nummers toegstaan\"\r\n  }\r\n};\r\n\r\nexport default numberValidator;","const numberFormatter = (value: string) => {\r\n  return value.replace(/[^0-9]/g, \"\");\r\n}\r\n\r\nexport default numberFormatter;","import styled from \"styled-components\";\r\nimport Heading from \"../../../../components/general/Heading\";\r\nimport { SolidButton } from \"../../../../components/general/Button\";\r\nimport Logo from \"../../../../components/general/Logo\";\r\nimport Paragraph from \"../../../../components/general/Paragraph\";\r\n\r\nexport { Circle } from \"../../../../util/layout\";\r\nexport { default as Header } from \"../../../../components/blocks/Header\";\r\nexport { default as Wrapper } from \"../../../../components/general/Wrapper\";\r\nexport { default as Input } from \"../../../../components/general/Input\";\r\nexport {\r\n  default as InputGroup\r\n} from \"../../../../components/general/InputGroup\";\r\n\r\nexport const Content = styled.div<{ headerHeight: number }>`\r\n  display: flex;\r\n  min-height: calc(100vh - ${props => props.headerHeight}px);\r\n  pointer-events: none;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin: 4rem auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  pointer-events: all;\r\n  width: 100%;\r\n`;\r\n\r\nexport const FormLogo = styled(Logo)`\r\n  margin-right: auto;\r\n  margin-bottom: 4rem;\r\n`;\r\n\r\nexport const FormHeading = styled(Heading)`\r\n  margin-bottom: 1.2rem;\r\n`;\r\n\r\nexport const FormParagraph = styled(Paragraph)`\r\n  margin-bottom: 3.4rem;\r\n`;\r\n\r\nexport const SubmitButton = styled(SolidButton)`\r\n  margin: 6.2rem auto 0;\r\n`;\r\n","import React, { Fragment, useContext, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FontColor } from \"../../../../data/style/variables\";\r\nimport RoutePath from \"../../../../data/RoutePath\";\r\nimport requiredValidator from \"../../../../util/forms/validators/requiredValidator\";\r\nimport urlValidator from \"../../../../util/forms/validators/optionalUrlValidator\";\r\nimport numberValidator from \"../../../../util/forms/validators/optionalNumberValidator\";\r\nimport numberFormatter from \"../../../../util/forms/formatters/numberFormatter\";\r\nimport { WrapperWidth } from \"../../../../components/general/Wrapper\";\r\nimport { HeadingType } from \"../../../../components/general/Heading\";\r\nimport { Context as QuickScanContext } from \"../../QuickScan\";\r\nimport {\r\n  Circle,\r\n  Header,\r\n  Form,\r\n  Wrapper,\r\n  FormHeading,\r\n  FormParagraph,\r\n  InputGroup,\r\n  Input,\r\n  SubmitButton\r\n} from \"./styled\";\r\nimport InputType from \"../../../../components/general/Input/data/InputType\";\r\n\r\nconst QuickScanOnboarding = () => {\r\n  const quickScanContext = useContext(QuickScanContext);\r\n  const history = useHistory();\r\n\r\n  const submitHandler = useCallback(\r\n    (event: React.FormEvent<HTMLFormElement>) => {\r\n      event.preventDefault();\r\n\r\n      const formData = new FormData(event.target as HTMLFormElement);\r\n\r\n      const company = {\r\n        companyName: formData.get(\"companyName\") as string,\r\n        website: formData.get(\"website\") as string,\r\n        sector: formData.get(\"sector\") as string,\r\n        region: formData.get(\"region\") as string,\r\n        employeeCount: parseInt(formData.get(\"employeeCount\") as string, 10)\r\n      };\r\n\r\n      if (company.companyName === \"\") {\r\n        return;\r\n      }\r\n\r\n      quickScanContext.setResult({\r\n        ...quickScanContext.result,\r\n        company\r\n      });\r\n\r\n      history.push(RoutePath.QuickScanQuestions);\r\n    },\r\n    [quickScanContext, history]\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Circle x={25} y={-20} />\r\n\r\n      <Header />\r\n\r\n      <Wrapper width={WrapperWidth.Smaller}>\r\n        <Form onSubmit={submitHandler}>\r\n          <FormHeading\r\n            headingType={HeadingType.Secondary}\r\n            fontColor={FontColor.Accent}\r\n          >\r\n            Bedrijfsgegevens\r\n          </FormHeading>\r\n\r\n          <FormParagraph>\r\n            Wij zijn erg geïnteresseerd met welk bedrijf wij het genoegen\r\n            hebben. Kan u ons wat meer vertellen over het bedrijf? Zodoende\r\n            kunnen wij een persoonlijke analyse uitvoeren.\r\n          </FormParagraph>\r\n\r\n          <InputGroup>\r\n            <Input\r\n              label=\"Bedrijfsnaam\"\r\n              name=\"companyName\"\r\n              validator={requiredValidator}\r\n            />\r\n\r\n            <Input\r\n              label=\"Website\"\r\n              name=\"website\"\r\n              validator={urlValidator}\r\n            />\r\n\r\n            <Input label=\"Sector\" name=\"sector\" />\r\n            <Input label=\"Regio\" name=\"region\" />\r\n\r\n            <Input\r\n              label=\"Aantal werknemers\"\r\n              name=\"employeeCount\"\r\n              type={InputType.Number}\r\n              formatter={numberFormatter}\r\n              validator={numberValidator}\r\n            />\r\n          </InputGroup>\r\n\r\n          <SubmitButton type=\"submit\">Start de Quickscan</SubmitButton>{\" \"}\r\n        </Form>\r\n      </Wrapper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuickScanOnboarding;\r\n","export { default } from \"./QuickScanOnBoarding\";\n"],"sourceRoot":""}