extend type Image {
  src: String!
  alt: String!
  fallbackColor: String!
}

extend type User {
  fullName: String!
  email: String!
}

extend type Article {
  slug: String!
  title: String!
  description: String!
  tags: Int!
  image: Image!
  author: User!
  blocks: [String!]!
  publishedDate: String!
  updatedDate: String!
  target: Int!
  minScore: Float!
  maxScore: Float!
}

input ArticleImageInput {
  src: String!
  alt: String!
  fallbackColor: String
}

input ArticleUserInput {
  fullName: String!
  email: String!
}

input ArticleInput {
  slug: String!
  title: String!
  description: String!
  tags: Int!
  image: ArticleImageInput!
  author: ArticleUserInput!
  blocks: [String!]!
  publishedDate: String!
  target: Int!
  minScore: Float!
  maxScore: Float!
}

extend type Query {
  article(slug: String): Article
  articles(
    target: Int
    tags: Int
    minScore: Float
    maxScore: Float
  ): [Article!]!
  featuredArticle(target: Int!): Article
}

extend type Mutation {
  # createArticle(article: ArticleInput): Article
  # updateArticle(article: ArticleInput): Article
}
