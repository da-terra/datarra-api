type UserName {
  familyName: String
  givenName: String
  middleName: String
}

type UserEmail {
  value: String
  type: String
}

type UserPhoto {
  value: String
}

type User {
  provider: String
  id: ID
  displayName: String
  name: UserName
  emails: [UserEmail!]!
  photos: [UserPhoto!]!

  # Custom properties - not part of OAuth2.0 spec
  organizations: [Organization!]!
  role: Int
}

input UpdateUserInput {
  organizations: [ID!]!
  role: Int
}

type Query {
  me: User

  user(id: ID!): User!
  users(search: String, provider: String, organizations: [ID!]): [User!]!
}

type Mutation {
  updateUser(id: ID!, user: UpdateUserInput): User!
}
